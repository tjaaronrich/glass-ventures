<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BundleTransformer.TypeScript</name>
    </assembly>
    <members>
        <member name="T:BundleTransformer.TypeScript.Configuration.ConfigurationContextExtensions">
            <summary>
            Configuration context extensions
            </summary>
        </member>
        <member name="F:BundleTransformer.TypeScript.Configuration.ConfigurationContextExtensions._tsConfig">
            <summary>
            Configuration settings of TypeScript translator
            </summary>
        </member>
        <member name="M:BundleTransformer.TypeScript.Configuration.ConfigurationContextExtensions.GetTypeScriptSettings(BundleTransformer.Core.Configuration.IConfigurationContext)">
            <summary>
            Gets a TypeScript translator configuration settings
            </summary>
            <param name="context">Configuration context</param>
            <returns>Configuration settings of TypeScript translator</returns>
        </member>
        <member name="T:BundleTransformer.TypeScript.Configuration.LibraryFileRegistration">
            <summary>
            Library file registration
            </summary>
        </member>
        <member name="P:BundleTransformer.TypeScript.Configuration.LibraryFileRegistration.LibraryFileName">
            <summary>
            Gets or sets a library file name
            </summary>
        </member>
        <member name="T:BundleTransformer.TypeScript.Configuration.LibraryFileRegistrationCollection">
            <summary>
            Collection of registered library files
            </summary>
        </member>
        <member name="M:BundleTransformer.TypeScript.Configuration.LibraryFileRegistrationCollection.CreateNewElement">
            <summary>
            Creates a new library file registration
            </summary>
            <returns>Library file registration</returns>
        </member>
        <member name="M:BundleTransformer.TypeScript.Configuration.LibraryFileRegistrationCollection.GetElementKey(System.Configuration.ConfigurationElement)">
            <summary>
            Gets a key of the specified library file registration
            </summary>
            <param name="element">Library file registration</param>
            <returns>Key</returns>
        </member>
        <member name="P:BundleTransformer.TypeScript.Configuration.LibraryFileRegistrationCollection.Item(System.String)">
            <summary>
            Gets a library file registration by file name
            </summary>
            <param name="libraryFileName">Library file name</param>
            <returns>Library file registration</returns>
        </member>
        <member name="T:BundleTransformer.TypeScript.Configuration.TypeScriptSettings">
            <summary>
            Configuration settings of TypeScript translator
            </summary>
        </member>
        <member name="P:BundleTransformer.TypeScript.Configuration.TypeScriptSettings.AllowUnreachableCode">
            <summary>
            Gets or sets a flag for whether to do not report errors on unreachable code
            </summary>
        </member>
        <member name="P:BundleTransformer.TypeScript.Configuration.TypeScriptSettings.AllowUnusedLabels">
            <summary>
            Gets or sets a flag for whether to do not report errors on unused labels
            </summary>
        </member>
        <member name="P:BundleTransformer.TypeScript.Configuration.TypeScriptSettings.AlwaysStrict">
            <summary>
            Gets or sets a flag for whether to parse in strict mode and emit
            <code>use strict</code> for each source file
            </summary>
        </member>
        <member name="P:BundleTransformer.TypeScript.Configuration.TypeScriptSettings.DownlevelIteration">
            <summary>
            Gets or sets a flag for whether to provide full support for iterables in <code>for-of</code>,
            spread, and destructuring when targeting 'ES5' or 'ES3'
            </summary>
        </member>
        <member name="P:BundleTransformer.TypeScript.Configuration.TypeScriptSettings.ForceConsistentCasingInFileNames">
            <summary>
            Gets or sets a flag for whether to disallow inconsistently-cased references to the same file
            </summary>
        </member>
        <member name="P:BundleTransformer.TypeScript.Configuration.TypeScriptSettings.KeyofStringsOnly">
            <summary>
            Gets or sets a flag for whether to resolve <code>keyof</code> to string valued property names
            only (no numbers or symbols)
            </summary>
        </member>
        <member name="P:BundleTransformer.TypeScript.Configuration.TypeScriptSettings.Libs">
            <summary>
            Gets a list of library files to be included in the compilation
            </summary>
        </member>
        <member name="P:BundleTransformer.TypeScript.Configuration.TypeScriptSettings.NewLine">
            <summary>
            Gets or sets a end of line sequence, that used when emitting files:
            'CRLF' (dos) or 'LF' (unix)
            </summary>
        </member>
        <member name="P:BundleTransformer.TypeScript.Configuration.TypeScriptSettings.NoEmit">
            <summary>
            Gets or sets a flag for whether to do not emit outputs
            </summary>
        </member>
        <member name="P:BundleTransformer.TypeScript.Configuration.TypeScriptSettings.NoEmitHelpers">
            <summary>
            Gets or sets a flag for whether to do not emit helpers (e.g. <code>__extends</code> function)
            </summary>
        </member>
        <member name="P:BundleTransformer.TypeScript.Configuration.TypeScriptSettings.NoEmitOnError">
            <summary>
            Gets or sets a flag for whether to do not emit outputs if any errors were reported
            </summary>
        </member>
        <member name="P:BundleTransformer.TypeScript.Configuration.TypeScriptSettings.NoErrorTruncation">
            <summary>
            Gets or sets a flag for whether to do not truncate type name in error messages
            </summary>
        </member>
        <member name="P:BundleTransformer.TypeScript.Configuration.TypeScriptSettings.NoFallthroughCasesInSwitch">
            <summary>
            Gets or sets a flag for whether to report errors for fallthrough cases in switch statement
            </summary>
        </member>
        <member name="P:BundleTransformer.TypeScript.Configuration.TypeScriptSettings.NoImplicitAny">
            <summary>
            Gets or sets a flag for whether to raise error on expressions and declarations
            with an implied <code>any</code> type
            </summary>
        </member>
        <member name="P:BundleTransformer.TypeScript.Configuration.TypeScriptSettings.NoImplicitReturns">
            <summary>
            Gets or sets a flag for whether to report error when not all code paths in function return a value
            </summary>
        </member>
        <member name="P:BundleTransformer.TypeScript.Configuration.TypeScriptSettings.NoImplicitThis">
            <summary>
            Gets or sets a flag for whether to raise error on <code>this</code> expressions with
            an implied <code>any</code> type
            </summary>
        </member>
        <member name="P:BundleTransformer.TypeScript.Configuration.TypeScriptSettings.NoLib">
            <summary>
            Gets or sets a flag for whether to do not include a default library (<code>lib.d.ts</code>
            or <code>lib.es6.d.ts</code>)
            </summary>
        </member>
        <member name="P:BundleTransformer.TypeScript.Configuration.TypeScriptSettings.NoResolve">
            <summary>
            Gets or sets a flag for whether to do not resolve a script references
            </summary>
        </member>
        <member name="P:BundleTransformer.TypeScript.Configuration.TypeScriptSettings.NoStrictGenericChecks">
            <summary>
            Gets or sets a flag for whether to disable strict checking of generic signatures
            in function types
            </summary>
        </member>
        <member name="P:BundleTransformer.TypeScript.Configuration.TypeScriptSettings.NoUnusedLocals">
            <summary>
            Gets or sets a flag for whether to report errors on unused locals
            </summary>
        </member>
        <member name="P:BundleTransformer.TypeScript.Configuration.TypeScriptSettings.NoUnusedParameters">
            <summary>
            Gets or sets a flag for whether to report errors on unused parameters
            </summary>
        </member>
        <member name="P:BundleTransformer.TypeScript.Configuration.TypeScriptSettings.PreserveConstEnums">
            <summary>
            Gets or sets a flag for whether to do not erase const enum declarations in generated code
            </summary>
        </member>
        <member name="P:BundleTransformer.TypeScript.Configuration.TypeScriptSettings.RemoveComments">
            <summary>
            Gets or sets a flag for whether to do not emit comments to output
            </summary>
        </member>
        <member name="P:BundleTransformer.TypeScript.Configuration.TypeScriptSettings.SkipDefaultLibCheck">
            <summary>
            Gets or sets a flag for whether to skip a default library checking
            </summary>
        </member>
        <member name="P:BundleTransformer.TypeScript.Configuration.TypeScriptSettings.SkipLibCheck">
            <summary>
            Gets or sets a flag for whether to skip type checking of declaration files
            </summary>
        </member>
        <member name="P:BundleTransformer.TypeScript.Configuration.TypeScriptSettings.StrictBindCallApply">
            <summary>
            Gets or sets a flag for whether to enable strict <code>bind</code>, <code>call</code>
            and <code>apply</code> methods on functions
            </summary>
        </member>
        <member name="P:BundleTransformer.TypeScript.Configuration.TypeScriptSettings.StrictNullChecks">
            <summary>
            Gets or sets a flag for whether to enable strict null checks
            </summary>
        </member>
        <member name="P:BundleTransformer.TypeScript.Configuration.TypeScriptSettings.StrictFunctionTypes">
            <summary>
            Gets or sets a flag for whether to enable strict checking of function types
            </summary>
        </member>
        <member name="P:BundleTransformer.TypeScript.Configuration.TypeScriptSettings.StrictPropertyInitialization">
            <summary>
            Gets or sets a flag for whether to enable strict checking of property
            initialization in classes
            </summary>
        </member>
        <member name="P:BundleTransformer.TypeScript.Configuration.TypeScriptSettings.StripInternal">
            <summary>
            Gets or sets a flag for whether to do not emit declarations for code that has an
            <code>@internal</code> annotation
            </summary>
        </member>
        <member name="P:BundleTransformer.TypeScript.Configuration.TypeScriptSettings.SuppressExcessPropertyErrors">
            <summary>
            Gets or sets a flag for whether to suppress excess property checks for object literals
            </summary>
        </member>
        <member name="P:BundleTransformer.TypeScript.Configuration.TypeScriptSettings.SuppressImplicitAnyIndexErrors">
            <summary>
            Gets or sets a flag for whether to suppress noImplicitAny errors for indexing objects lacking
            index signatures
            </summary>
        </member>
        <member name="P:BundleTransformer.TypeScript.Configuration.TypeScriptSettings.SuppressTypeCheckingErrors">
            <summary>
            Gets or sets a flag for whether to suppress type checking errors
            </summary>
        </member>
        <member name="P:BundleTransformer.TypeScript.Configuration.TypeScriptSettings.Target">
            <summary>
            Gets or sets a ECMAScript target version: `EcmaScript3` (default), `EcmaScript5`,
            `EcmaScript2015`, `EcmaScript2016`, `EcmaScript2017`, `EcmaScript2018`, `EcmaScript2019`,
            `EcmaScript2020` or `EcmaScriptNext`
            </summary>
        </member>
        <member name="P:BundleTransformer.TypeScript.Configuration.TypeScriptSettings.TranspileOnly">
            <summary>
            Gets or sets a flag for whether to run TypeScript to JS transpilation
            only (skip other passes)
            </summary>
        </member>
        <member name="P:BundleTransformer.TypeScript.Configuration.TypeScriptSettings.JsEngine">
            <summary>
            Gets a configuration settings of JS engine
            </summary>
        </member>
        <member name="T:BundleTransformer.TypeScript.Constants.AssetTypeCode">
            <summary>
            Asset type code constants
            </summary>
        </member>
        <member name="F:BundleTransformer.TypeScript.Constants.AssetTypeCode.TypeScript">
            <summary>
            TypeScript asset
            </summary>
        </member>
        <member name="T:BundleTransformer.TypeScript.Constants.TranslatorName">
            <summary>
            Translator names constants
            </summary>
        </member>
        <member name="F:BundleTransformer.TypeScript.Constants.TranslatorName.TypeScriptTranslator">
            <summary>
            Name (key) of TypeScript translator
            </summary>
        </member>
        <member name="T:BundleTransformer.TypeScript.HttpHandlers.TypeScriptAssetHandler">
            <summary>
            Debugging HTTP handler that responsible for text output
            of translated TypeScript asset
            </summary>
        </member>
        <member name="P:BundleTransformer.TypeScript.HttpHandlers.TypeScriptAssetHandler.IsStaticAsset">
            <summary>
            Gets a value indicating whether asset is static
            </summary>
        </member>
        <member name="M:BundleTransformer.TypeScript.HttpHandlers.TypeScriptAssetHandler.#ctor">
            <summary>
            Constructs a instance of the debugging TypeScript HTTP handler
            </summary>
        </member>
        <member name="M:BundleTransformer.TypeScript.HttpHandlers.TypeScriptAssetHandler.#ctor(System.Web.Caching.Cache,BundleTransformer.Core.FileSystem.IVirtualFileSystemWrapper,BundleTransformer.Core.Configuration.AssetHandlerSettings)">
            <summary>
            Constructs a instance of the debugging TypeScript HTTP handler
            </summary>
            <param name="cache">Server cache</param>
            <param name="virtualFileSystemWrapper">Virtual file system wrapper</param>
            <param name="assetHandlerConfig">Configuration settings of the debugging HTTP handler</param>
        </member>
        <member name="M:BundleTransformer.TypeScript.HttpHandlers.TypeScriptAssetHandler.TranslateAsset(BundleTransformer.Core.Assets.IAsset,BundleTransformer.Core.Transformers.ITransformer,System.Boolean)">
            <summary>
            Translates a code of asset written on TypeScript to JS code
            </summary>
            <param name="asset">Asset</param>
            <param name="transformer">Transformer</param>
            <param name="isDebugMode">Flag that web application is in debug mode</param>
            <returns>Translated asset</returns>
        </member>
        <member name="T:BundleTransformer.TypeScript.Internal.CompilationOptions">
            <summary>
            TypeScript compilation options
            </summary>
        </member>
        <member name="P:BundleTransformer.TypeScript.Internal.CompilationOptions.AllowUnreachableCode">
            <summary>
            Gets or sets a flag for whether to do not report errors on unreachable code
            </summary>
        </member>
        <member name="P:BundleTransformer.TypeScript.Internal.CompilationOptions.AllowUnusedLabels">
            <summary>
            Gets or sets a flag for whether to do not report errors on unused labels
            </summary>
        </member>
        <member name="P:BundleTransformer.TypeScript.Internal.CompilationOptions.AlwaysStrict">
            <summary>
            Gets or sets a flag for whether to parse in strict mode and emit
            <code>use strict</code> for each source file
            </summary>
        </member>
        <member name="P:BundleTransformer.TypeScript.Internal.CompilationOptions.DownlevelIteration">
            <summary>
            Gets or sets a flag for whether to provide full support for iterables in <code>for-of</code>,
            spread, and destructuring when targeting 'ES5' or 'ES3'
            </summary>
        </member>
        <member name="P:BundleTransformer.TypeScript.Internal.CompilationOptions.ForceConsistentCasingInFileNames">
            <summary>
            Gets or sets a flag for whether to disallow inconsistently-cased references to the same file
            </summary>
        </member>
        <member name="P:BundleTransformer.TypeScript.Internal.CompilationOptions.KeyofStringsOnly">
            <summary>
            Gets or sets a flag for whether to resolve <code>keyof</code> to string valued property names
            only (no numbers or symbols)
            </summary>
        </member>
        <member name="P:BundleTransformer.TypeScript.Internal.CompilationOptions.Libs">
            <summary>
            Gets a list of library file names to be included in the compilation
            </summary>
        </member>
        <member name="P:BundleTransformer.TypeScript.Internal.CompilationOptions.NewLine">
            <summary>
            Gets or sets a end of line sequence, that used when emitting files:
            'CRLF' (dos) or 'LF' (unix)
            </summary>
        </member>
        <member name="P:BundleTransformer.TypeScript.Internal.CompilationOptions.NoEmit">
            <summary>
            Gets or sets a flag for whether to do not emit outputs
            </summary>
        </member>
        <member name="P:BundleTransformer.TypeScript.Internal.CompilationOptions.NoEmitHelpers">
            <summary>
            Gets or sets a flag for whether to do not emit helpers (e.g. <code>__extends</code> function)
            </summary>
        </member>
        <member name="P:BundleTransformer.TypeScript.Internal.CompilationOptions.NoEmitOnError">
            <summary>
            Gets or sets a flag for whether to do not emit outputs if any errors were reported
            </summary>
        </member>
        <member name="P:BundleTransformer.TypeScript.Internal.CompilationOptions.NoErrorTruncation">
            <summary>
            Gets or sets a flag for whether to do not truncate type name in error messages
            </summary>
        </member>
        <member name="P:BundleTransformer.TypeScript.Internal.CompilationOptions.NoFallthroughCasesInSwitch">
            <summary>
            Gets or sets a flag for whether to report errors for fallthrough cases in switch statement
            </summary>
        </member>
        <member name="P:BundleTransformer.TypeScript.Internal.CompilationOptions.NoImplicitAny">
            <summary>
            Gets or sets a flag for whether to raise error on expressions and declarations
            with an implied <code>any</code> type
            </summary>
        </member>
        <member name="P:BundleTransformer.TypeScript.Internal.CompilationOptions.NoImplicitReturns">
            <summary>
            Gets or sets a flag for whether to report error when not all code paths in function return a value
            </summary>
        </member>
        <member name="P:BundleTransformer.TypeScript.Internal.CompilationOptions.NoImplicitThis">
            <summary>
            Gets or sets a flag for whether to raise error on <code>this</code> expressions with
            an implied <code>any</code> type
            </summary>
        </member>
        <member name="P:BundleTransformer.TypeScript.Internal.CompilationOptions.NoLib">
            <summary>
            Gets or sets a flag for whether to do not include a default library (<code>lib.d.ts</code>
            or <code>lib.es6.d.ts</code>)
            </summary>
        </member>
        <member name="P:BundleTransformer.TypeScript.Internal.CompilationOptions.NoResolve">
            <summary>
            Gets or sets a flag for whether to do not resolve a script references
            </summary>
        </member>
        <member name="P:BundleTransformer.TypeScript.Internal.CompilationOptions.NoStrictGenericChecks">
            <summary>
            Gets or sets a flag for whether to disable strict checking of generic signatures
            in function types
            </summary>
        </member>
        <member name="P:BundleTransformer.TypeScript.Internal.CompilationOptions.NoUnusedLocals">
            <summary>
            Gets or sets a flag for whether to report errors on unused locals
            </summary>
        </member>
        <member name="P:BundleTransformer.TypeScript.Internal.CompilationOptions.NoUnusedParameters">
            <summary>
            Gets or sets a flag for whether to report errors on unused parameters
            </summary>
        </member>
        <member name="P:BundleTransformer.TypeScript.Internal.CompilationOptions.PreserveConstEnums">
            <summary>
            Gets or sets a flag for whether to do not erase const enum declarations in generated code
            </summary>
        </member>
        <member name="P:BundleTransformer.TypeScript.Internal.CompilationOptions.RemoveComments">
            <summary>
            Gets or sets a flag for whether to do not emit comments to output
            </summary>
        </member>
        <member name="P:BundleTransformer.TypeScript.Internal.CompilationOptions.SkipDefaultLibCheck">
            <summary>
            Gets or sets a flag for whether to skip a default library checking
            </summary>
        </member>
        <member name="P:BundleTransformer.TypeScript.Internal.CompilationOptions.SkipLibCheck">
            <summary>
            Gets or sets a flag for whether to skip type checking of declaration files
            </summary>
        </member>
        <member name="P:BundleTransformer.TypeScript.Internal.CompilationOptions.StrictBindCallApply">
            <summary>
            Gets or sets a flag for whether to enable strict <code>bind</code>, <code>call</code>
            and <code>apply</code> methods on functions
            </summary>
        </member>
        <member name="P:BundleTransformer.TypeScript.Internal.CompilationOptions.StrictNullChecks">
            <summary>
            Gets or sets a flag for whether to enable strict null checks
            </summary>
        </member>
        <member name="P:BundleTransformer.TypeScript.Internal.CompilationOptions.StrictFunctionTypes">
            <summary>
            Gets or sets a flag for whether to enable strict checking of function types
            </summary>
        </member>
        <member name="P:BundleTransformer.TypeScript.Internal.CompilationOptions.StrictPropertyInitialization">
            <summary>
            Gets or sets a flag for whether to enable strict checking of property
            initialization in classes
            </summary>
        </member>
        <member name="P:BundleTransformer.TypeScript.Internal.CompilationOptions.StripInternal">
            <summary>
            Gets or sets a flag for whether to do not emit declarations for code that has an
            <code>@internal</code> annotation
            </summary>
        </member>
        <member name="P:BundleTransformer.TypeScript.Internal.CompilationOptions.SuppressExcessPropertyErrors">
            <summary>
            Gets or sets a flag for whether to suppress excess property checks for object literals
            </summary>
        </member>
        <member name="P:BundleTransformer.TypeScript.Internal.CompilationOptions.SuppressImplicitAnyIndexErrors">
            <summary>
            Gets or sets a flag for whether to suppress noImplicitAny errors for indexing objects lacking
            index signatures
            </summary>
        </member>
        <member name="P:BundleTransformer.TypeScript.Internal.CompilationOptions.SuppressTypeCheckingErrors">
            <summary>
            Gets or sets a flag for whether to suppress type checking errors
            </summary>
        </member>
        <member name="P:BundleTransformer.TypeScript.Internal.CompilationOptions.Target">
            <summary>
            Gets or sets a ECMAScript target version: `EcmaScript3` (default), `EcmaScript5`,
            `EcmaScript2015`, `EcmaScript2016`, `EcmaScript2017`, `EcmaScript2018`, `EcmaScript2019`,
            `EcmaScript2020` or `EcmaScriptNext`
            </summary>
        </member>
        <member name="P:BundleTransformer.TypeScript.Internal.CompilationOptions.TranspileOnly">
            <summary>
            Gets or sets a flag for whether to run TypeScript to JS transpilation
            only (skip other passes)
            </summary>
        </member>
        <member name="M:BundleTransformer.TypeScript.Internal.CompilationOptions.#ctor">
            <summary>
            Constructs a instance of the TypeScript compilation options
            </summary>
        </member>
        <member name="P:BundleTransformer.TypeScript.Internal.CompilationResult.CompiledContent">
            <summary>
            Gets or sets a compilated TypeScript code
            </summary>
        </member>
        <member name="P:BundleTransformer.TypeScript.Internal.CompilationResult.IncludedFilePaths">
            <summary>
            Gets or sets a list of included files
            </summary>
        </member>
        <member name="M:BundleTransformer.TypeScript.Internal.CompilationResult.#ctor">
            <summary>
            Constructs a instance of the compilation result
            </summary>
        </member>
        <member name="T:BundleTransformer.TypeScript.Internal.ResourceHelpers">
            <summary>
            TypeScript resource helpers
            </summary>
        </member>
        <member name="F:BundleTransformer.TypeScript.Internal.ResourceHelpers.RESOURCES_NAMESPACE">
            <summary>
            Namespace for resources
            </summary>
        </member>
        <member name="P:BundleTransformer.TypeScript.Internal.ResourceHelpers.ResourcesNamespace">
            <summary>
            Gets a namespace for resources
            </summary>
        </member>
        <member name="M:BundleTransformer.TypeScript.Internal.ResourceHelpers.GetResourceName(System.String)">
            <summary>
            Gets a resource name
            </summary>
            <param name="fileName">File name</param>
            <returns>Resource name</returns>
        </member>
        <member name="T:BundleTransformer.TypeScript.Internal.TypeScriptCompilationException">
            <summary>
            The exception that is thrown when a compiling of asset code by TypeScript compiler is failed
            </summary>
        </member>
        <member name="M:BundleTransformer.TypeScript.Internal.TypeScriptCompilationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:BundleTransformer.TypeScript.Internal.TypeScriptCompilationException"/> class
            with a specified error message
            </summary>
            <param name="message">The message that describes the error</param>
        </member>
        <member name="M:BundleTransformer.TypeScript.Internal.TypeScriptCompilationException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:BundleTransformer.TypeScript.Internal.TypeScriptCompilationException"/> class
            with a specified error message and a reference to the inner exception that is the cause of this exception
            </summary>
            <param name="message">The error message that explains the reason for the exception</param>
            <param name="innerException">The exception that is the cause of the current exception</param>
        </member>
        <member name="T:BundleTransformer.TypeScript.Internal.TypeScriptCompiler">
            <summary>
            TypeScript compiler
            </summary>
        </member>
        <member name="F:BundleTransformer.TypeScript.Internal.TypeScriptCompiler.TYPESCRIPT_LIBRARY_FILE_NAME">
            <summary>
            Name of file, which contains a TypeScript library
            </summary>
        </member>
        <member name="F:BundleTransformer.TypeScript.Internal.TypeScriptCompiler.TSC_HELPER_FILE_NAME">
            <summary>
            Name of file, which contains a TypeScript compiler helper
            </summary>
        </member>
        <member name="F:BundleTransformer.TypeScript.Internal.TypeScriptCompiler.COMPILATION_FUNCTION_CALL_TEMPLATE">
            <summary>
            Template of function call, which is responsible for compilation
            </summary>
        </member>
        <member name="F:BundleTransformer.TypeScript.Internal.TypeScriptCompiler.VIRTUAL_FILE_MANAGER_VARIABLE_NAME">
            <summary>
            Name of variable, which contains a virtual file manager
            </summary>
        </member>
        <member name="F:BundleTransformer.TypeScript.Internal.TypeScriptCompiler._jsEngine">
            <summary>
            JS engine
            </summary>
        </member>
        <member name="F:BundleTransformer.TypeScript.Internal.TypeScriptCompiler._virtualFileManager">
            <summary>
            Virtual file manager
            </summary>
        </member>
        <member name="F:BundleTransformer.TypeScript.Internal.TypeScriptCompiler._optionsString">
            <summary>
            String representation of the compilation options
            </summary>
        </member>
        <member name="F:BundleTransformer.TypeScript.Internal.TypeScriptCompiler._initializedFlag">
            <summary>
            Flag that compiler is initialized
            </summary>
        </member>
        <member name="F:BundleTransformer.TypeScript.Internal.TypeScriptCompiler._disposedFlag">
            <summary>
            Flag that object is destroyed
            </summary>
        </member>
        <member name="M:BundleTransformer.TypeScript.Internal.TypeScriptCompiler.#ctor(System.Func{JavaScriptEngineSwitcher.Core.IJsEngine},BundleTransformer.TypeScript.Internal.VirtualFileManager,BundleTransformer.TypeScript.Internal.CompilationOptions)">
            <summary>
            Constructs a instance of TypeScript compiler
            </summary>
            <param name="createJsEngineInstance">Delegate that creates an instance of JS engine</param>
            <param name="virtualFileManager">Virtual file manager</param>
            <param name="options">Compilation options</param>
        </member>
        <member name="M:BundleTransformer.TypeScript.Internal.TypeScriptCompiler.Initialize">
            <summary>
            Initializes compiler
            </summary>
        </member>
        <member name="M:BundleTransformer.TypeScript.Internal.TypeScriptCompiler.Compile(System.String)">
            <summary>
            "Compiles" a TypeScript code to JS code
            </summary>
            <param name="path">Path to TypeScript file</param>
            <returns>Compilation result</returns>
        </member>
        <member name="M:BundleTransformer.TypeScript.Internal.TypeScriptCompiler.ConvertCompilationOptionsToJson(BundleTransformer.TypeScript.Internal.CompilationOptions)">
            <summary>
            Converts a compilation options to JSON
            </summary>
            <param name="options">Compilation options</param>
            <returns>Compilation options in JSON format</returns>
        </member>
        <member name="M:BundleTransformer.TypeScript.Internal.TypeScriptCompiler.FormatErrorDetails(Newtonsoft.Json.Linq.JToken,System.String)">
            <summary>
            Generates a detailed error message
            </summary>
            <param name="errorDetails">Error details</param>
            <param name="currentFilePath">Path to current TypeScript file</param>
            <returns>Detailed error message</returns>
        </member>
        <member name="M:BundleTransformer.TypeScript.Internal.TypeScriptCompiler.Dispose">
            <summary>
            Destroys object
            </summary>
        </member>
        <member name="T:BundleTransformer.TypeScript.Internal.VirtualFileManager">
            <summary>
            Virtual file manager
            </summary>
        </member>
        <member name="F:BundleTransformer.TypeScript.Internal.VirtualFileManager.TYPESCRIPT_DEFAULT_LIBRARIES_DIRECTORY_NAME">
            <summary>
            Name of directory, which contains a TypeScript default libraries
            </summary>
        </member>
        <member name="F:BundleTransformer.TypeScript.Internal.VirtualFileManager._defaultLibraryCache">
            <summary>
            Cache of default libraries
            </summary>
        </member>
        <member name="F:BundleTransformer.TypeScript.Internal.VirtualFileManager._defaultLibraryCacheSynchronizer">
            <summary>
            Synchronizer of default library cache
            </summary>
        </member>
        <member name="F:BundleTransformer.TypeScript.Internal.VirtualFileManager._virtualFileSystemWrapper">
            <summary>
            Virtual file system wrapper
            </summary>
        </member>
        <member name="M:BundleTransformer.TypeScript.Internal.VirtualFileManager.#cctor">
            <summary>
            Static constructor
            </summary>
        </member>
        <member name="M:BundleTransformer.TypeScript.Internal.VirtualFileManager.#ctor(BundleTransformer.Core.FileSystem.IVirtualFileSystemWrapper)">
            <summary>
            Constructs a instance of virtual file manager
            </summary>
            <param name="virtualFileSystemWrapper">Virtual file system wrapper</param>
        </member>
        <member name="M:BundleTransformer.TypeScript.Internal.VirtualFileManager.GetDefaultLibraryContent(System.String)">
            <summary>
            Gets a content of default library
            </summary>
            <param name="fileName">Default library file name</param>
            <returns>Content of default library</returns>
        </member>
        <member name="M:BundleTransformer.TypeScript.Internal.VirtualFileManager.DefaultLibraryExists(System.String)">
            <summary>
            Determines whether the specified default library exists
            </summary>
            <param name="path">The default library to check</param>
            <returns>true - library exists; false - library does not exist</returns>
        </member>
        <member name="M:BundleTransformer.TypeScript.Internal.VirtualFileManager.ReadDefaultLibrary(System.String)">
            <summary>
            Reads a content from default library
            </summary>
            <param name="path">Default library file name</param>
            <returns>Content of default library</returns>
        </member>
        <member name="M:BundleTransformer.TypeScript.Internal.VirtualFileManager.GetCurrentDirectory">
            <summary>
            Gets a current working directory of the application
            </summary>
            <returns>The string containing the path of the current working directory</returns>
        </member>
        <member name="M:BundleTransformer.TypeScript.Internal.VirtualFileManager.FileExists(System.String)">
            <summary>
            Determines whether the specified file exists
            </summary>
            <param name="path">The file to check</param>
            <returns>true if the caller has the required permissions and path contains
            the name of an existing file; otherwise, false</returns>
        </member>
        <member name="M:BundleTransformer.TypeScript.Internal.VirtualFileManager.ReadFile(System.String)">
            <summary>
            Opens a file, reads all lines of the file, and then closes the file
            </summary>
            <param name="path">The file to open for reading</param>
            <returns>The string containing all lines of the file</returns>
        </member>
        <member name="T:BundleTransformer.TypeScript.NewLineMode">
            <summary>
            New line mode
            </summary>
        </member>
        <member name="T:BundleTransformer.TypeScript.TargetMode">
            <summary>
            Target mode
            </summary>
        </member>
        <member name="T:BundleTransformer.TypeScript.Translators.TypeScriptTranslator">
            <summary>
            Translator that responsible for translation of TypeScript code to JS code
            </summary>
        </member>
        <member name="F:BundleTransformer.TypeScript.Translators.TypeScriptTranslator.INPUT_CODE_TYPE">
            <summary>
            Name of input code type
            </summary>
        </member>
        <member name="F:BundleTransformer.TypeScript.Translators.TypeScriptTranslator.OUTPUT_CODE_TYPE">
            <summary>
            Name of output code type
            </summary>
        </member>
        <member name="F:BundleTransformer.TypeScript.Translators.TypeScriptTranslator._createJsEngineInstance">
            <summary>
            Delegate that creates an instance of JS engine
            </summary>
        </member>
        <member name="F:BundleTransformer.TypeScript.Translators.TypeScriptTranslator._virtualFileManager">
            <summary>
            Virtual file manager
            </summary>
        </member>
        <member name="P:BundleTransformer.TypeScript.Translators.TypeScriptTranslator.IsDebugMode">
            <summary>
            Gets or sets a flag that web application is in debug mode
            </summary>
        </member>
        <member name="P:BundleTransformer.TypeScript.Translators.TypeScriptTranslator.AllowUnreachableCode">
            <summary>
            Gets or sets a flag for whether to do not report errors on unreachable code
            </summary>
        </member>
        <member name="P:BundleTransformer.TypeScript.Translators.TypeScriptTranslator.AllowUnusedLabels">
            <summary>
            Gets or sets a flag for whether to do not report errors on unused labels
            </summary>
        </member>
        <member name="P:BundleTransformer.TypeScript.Translators.TypeScriptTranslator.AlwaysStrict">
            <summary>
            Gets or sets a flag for whether to parse in strict mode and emit
            <code>use strict</code> for each source file
            </summary>
        </member>
        <member name="P:BundleTransformer.TypeScript.Translators.TypeScriptTranslator.DownlevelIteration">
            <summary>
            Gets or sets a flag for whether to provide full support for iterables in <code>for-of</code>,
            spread, and destructuring when targeting 'ES5' or 'ES3'
            </summary>
        </member>
        <member name="P:BundleTransformer.TypeScript.Translators.TypeScriptTranslator.ForceConsistentCasingInFileNames">
            <summary>
            Gets or sets a flag for whether to disallow inconsistently-cased references to the same file
            </summary>
        </member>
        <member name="P:BundleTransformer.TypeScript.Translators.TypeScriptTranslator.KeyofStringsOnly">
            <summary>
            Gets or sets a flag for whether to resolve <code>keyof</code> to string valued property names
            only (no numbers or symbols)
            </summary>
        </member>
        <member name="P:BundleTransformer.TypeScript.Translators.TypeScriptTranslator.Libs">
            <summary>
            Gets a list of library file names to be included in the compilation
            </summary>
        </member>
        <member name="P:BundleTransformer.TypeScript.Translators.TypeScriptTranslator.NewLine">
            <summary>
            Gets or sets a end of line sequence, that used when emitting files:
            'CRLF' (dos) or 'LF' (unix)
            </summary>
        </member>
        <member name="P:BundleTransformer.TypeScript.Translators.TypeScriptTranslator.NoEmit">
            <summary>
            Gets or sets a flag for whether to do not emit outputs
            </summary>
        </member>
        <member name="P:BundleTransformer.TypeScript.Translators.TypeScriptTranslator.NoEmitHelpers">
            <summary>
            Gets or sets a flag for whether to do not emit helpers (e.g. <code>__extends</code> function)
            </summary>
        </member>
        <member name="P:BundleTransformer.TypeScript.Translators.TypeScriptTranslator.NoEmitOnError">
            <summary>
            Gets or sets a flag for whether to do not emit outputs if any errors were reported
            </summary>
        </member>
        <member name="P:BundleTransformer.TypeScript.Translators.TypeScriptTranslator.NoErrorTruncation">
            <summary>
            Gets or sets a flag for whether to do not truncate type name in error messages
            </summary>
        </member>
        <member name="P:BundleTransformer.TypeScript.Translators.TypeScriptTranslator.NoFallthroughCasesInSwitch">
            <summary>
            Gets or sets a flag for whether to report errors for fallthrough cases in switch statement
            </summary>
        </member>
        <member name="P:BundleTransformer.TypeScript.Translators.TypeScriptTranslator.NoImplicitAny">
            <summary>
            Gets or sets a flag for whether to raise error on expressions and declarations
            with an implied <code>any</code> type
            </summary>
        </member>
        <member name="P:BundleTransformer.TypeScript.Translators.TypeScriptTranslator.NoImplicitReturns">
            <summary>
            Gets or sets a flag for whether to report error when not all code paths in function return a value
            </summary>
        </member>
        <member name="P:BundleTransformer.TypeScript.Translators.TypeScriptTranslator.NoImplicitThis">
            <summary>
            Gets or sets a flag for whether to raise error on <code>this</code> expressions with
            an implied <code>any</code> type
            </summary>
        </member>
        <member name="P:BundleTransformer.TypeScript.Translators.TypeScriptTranslator.NoLib">
            <summary>
            Gets or sets a flag for whether to do not include a default library (<code>lib.d.ts</code>
            or <code>lib.es6.d.ts</code>)
            </summary>
        </member>
        <member name="P:BundleTransformer.TypeScript.Translators.TypeScriptTranslator.NoResolve">
            <summary>
            Gets or sets a flag for whether to do not resolve a script references
            </summary>
        </member>
        <member name="P:BundleTransformer.TypeScript.Translators.TypeScriptTranslator.NoStrictGenericChecks">
            <summary>
            Gets or sets a flag for whether to disable strict checking of generic signatures
            in function types
            </summary>
        </member>
        <member name="P:BundleTransformer.TypeScript.Translators.TypeScriptTranslator.NoUnusedLocals">
            <summary>
            Gets or sets a flag for whether to report errors on unused locals
            </summary>
        </member>
        <member name="P:BundleTransformer.TypeScript.Translators.TypeScriptTranslator.NoUnusedParameters">
            <summary>
            Gets or sets a flag for whether to report errors on unused parameters
            </summary>
        </member>
        <member name="P:BundleTransformer.TypeScript.Translators.TypeScriptTranslator.PreserveConstEnums">
            <summary>
            Gets or sets a flag for whether to do not erase const enum declarations in generated code
            </summary>
        </member>
        <member name="P:BundleTransformer.TypeScript.Translators.TypeScriptTranslator.RemoveComments">
            <summary>
            Gets or sets a flag for whether to do not emit comments to output
            </summary>
        </member>
        <member name="P:BundleTransformer.TypeScript.Translators.TypeScriptTranslator.SkipDefaultLibCheck">
            <summary>
            Gets or sets a flag for whether to skip a default library checking
            </summary>
        </member>
        <member name="P:BundleTransformer.TypeScript.Translators.TypeScriptTranslator.SkipLibCheck">
            <summary>
            Gets or sets a flag for whether to skip type checking of declaration files
            </summary>
        </member>
        <member name="P:BundleTransformer.TypeScript.Translators.TypeScriptTranslator.StrictBindCallApply">
            <summary>
            Gets or sets a flag for whether to enable strict <code>bind</code>, <code>call</code>
            and <code>apply</code> methods on functions
            </summary>
        </member>
        <member name="P:BundleTransformer.TypeScript.Translators.TypeScriptTranslator.StrictNullChecks">
            <summary>
            Gets or sets a flag for whether to enable strict null checks
            </summary>
        </member>
        <member name="P:BundleTransformer.TypeScript.Translators.TypeScriptTranslator.StrictFunctionTypes">
            <summary>
            Gets or sets a flag for whether to enable strict checking of function types
            </summary>
        </member>
        <member name="P:BundleTransformer.TypeScript.Translators.TypeScriptTranslator.StrictPropertyInitialization">
            <summary>
            Gets or sets a flag for whether to enable strict checking of property
            initialization in classes
            </summary>
        </member>
        <member name="P:BundleTransformer.TypeScript.Translators.TypeScriptTranslator.StripInternal">
            <summary>
            Gets or sets a flag for whether to do not emit declarations for code that has an
            <code>@internal</code> annotation
            </summary>
        </member>
        <member name="P:BundleTransformer.TypeScript.Translators.TypeScriptTranslator.SuppressExcessPropertyErrors">
            <summary>
            Gets or sets a flag for whether to suppress excess property checks for object literals
            </summary>
        </member>
        <member name="P:BundleTransformer.TypeScript.Translators.TypeScriptTranslator.SuppressImplicitAnyIndexErrors">
            <summary>
            Gets or sets a flag for whether to suppress noImplicitAny errors for indexing objects lacking
            index signatures
            </summary>
        </member>
        <member name="P:BundleTransformer.TypeScript.Translators.TypeScriptTranslator.SuppressTypeCheckingErrors">
            <summary>
            Gets or sets a flag for whether to suppress type checking errors
            </summary>
        </member>
        <member name="P:BundleTransformer.TypeScript.Translators.TypeScriptTranslator.Target">
            <summary>
            Gets or sets a ECMAScript target version: `EcmaScript3` (default), `EcmaScript5`,
            `EcmaScript2015`, `EcmaScript2016`, `EcmaScript2017`, `EcmaScript2018`, `EcmaScript2019`,
            `EcmaScript2020` or `EcmaScriptNext`
            </summary>
        </member>
        <member name="P:BundleTransformer.TypeScript.Translators.TypeScriptTranslator.TranspileOnly">
            <summary>
            Gets or sets a flag for whether to run TypeScript to JS transpilation
            only (skip other passes)
            </summary>
        </member>
        <member name="M:BundleTransformer.TypeScript.Translators.TypeScriptTranslator.#ctor">
            <summary>
            Constructs a instance of TypeScript translator
            </summary>
        </member>
        <member name="M:BundleTransformer.TypeScript.Translators.TypeScriptTranslator.#ctor(System.Func{JavaScriptEngineSwitcher.Core.IJsEngine},BundleTransformer.Core.FileSystem.IVirtualFileSystemWrapper,BundleTransformer.TypeScript.Configuration.TypeScriptSettings)">
            <summary>
            Constructs a instance of TypeScript translator
            </summary>
            <param name="createJsEngineInstance">Delegate that creates an instance of JS engine</param>
            <param name="virtualFileSystemWrapper">Virtual file system wrapper</param>
            <param name="tsConfig">Configuration settings of TypeScript translator</param>
        </member>
        <member name="M:BundleTransformer.TypeScript.Translators.TypeScriptTranslator.Translate(BundleTransformer.Core.Assets.IAsset)">
            <summary>
            Translates a code of asset written on TypeScript to JS code
            </summary>
            <param name="asset">Asset with code written on TypeScript</param>
            <returns>Asset with translated code</returns>
        </member>
        <member name="M:BundleTransformer.TypeScript.Translators.TypeScriptTranslator.Translate(System.Collections.Generic.IList{BundleTransformer.Core.Assets.IAsset})">
            <summary>
            Translates a code of assets written on TypeScript to JS code
            </summary>
            <param name="assets">Set of assets with code written on TypeScript</param>
            <returns>Set of assets with translated code</returns>
        </member>
        <member name="M:BundleTransformer.TypeScript.Translators.TypeScriptTranslator.CreateCompilationOptions">
            <summary>
            Creates a compilation options
            </summary>
            <returns>Compilation options</returns>
        </member>
    </members>
</doc>
